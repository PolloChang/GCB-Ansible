# 排程處理項目
- name: TWGCB-01-008-0066
  become: true
  shell: |
    find -L /bin /sbin /usr/bin /usr/sbin /usr/local/bin /usr/local/sbin -perm /0022 | xargs ls -al
  ignore_errors: true
  register: command_output

- debug:
    var: command_output.stdout_lines

- name: TWGCB-01-008-0067
  become: true
  shell: |
    find -L /bin /sbin /usr/bin /usr/sbin /usr/local/bin /usr/local/sbin ! -user root | xargs ls -al
  ignore_errors: true
  register: command_output

- debug:
    var: command_output.stdout_lines

- name: TWGCB-01-008-0068
  become: true
  shell: |
    find -L /bin /sbin /usr/bin /usr/sbin /usr/local/bin /usr/local/sbin ! -group root | xargs ls -al
  ignore_errors: true
  register: command_output

- debug:
    var: command_output.stdout_lines

- name: TWGCB-01-008-0069
  become: true
  shell: |
    find -L /lib /lib64 /usr/lib /usr/lib64 -perm /0022 -type f | xargs ls -al
  ignore_errors: true
  register: command_output

- debug:
    var: command_output.stdout_lines

- name: TWGCB-01-008-0070
  become: true
  shell: |
    find -L /lib /lib64 /usr/lib /usr/lib64 ! -user root | xargs ls -al
  ignore_errors: true
  register: command_output

- debug:
    var: command_output.stdout_lines

- name: TWGCB-01-008-0071
  become: true
  shell: |
    find -L /lib /lib64 /usr/lib /usr/lib64 ! -group root | xargs ls -al
  ignore_errors: true
  register: command_output

- debug:
    var: command_output.stdout_lines

- name: TWGCB-01-008-0072
  become: true
  shell: |
    awk -F: '($2 == "" ) { print $1 " does not have a password "}' /etc/shadow
  args:
    executable: /bin/bash
  ignore_errors: true
  register: command_output

- debug:
    var: command_output.stdout_lines

- name: TWGCB-01-008-0073,TWGCB-01-008-0074
  become: true
  command: echo $PATH
  ignore_errors: true
  register: command_output

- debug:
    var: command_output.stdout_lines

- name: TWGCB-01-008-0075
  become: true
  shell: |
    grep '^\+:' /etc/passwd
  ignore_errors: true
  register: command_output

- debug:
    var: command_output.stdout_lines

- name: TWGCB-01-008-0076
  become: true
  shell: |
    grep '^\+:' /etc/shadow
  ignore_errors: true
  register: command_output

- debug:
    var: command_output.stdout_lines

- name: TWGCB-01-008-0077
  become: true
  shell: |
    grep '^\+:' /etc/group
  ignore_errors: true
  register: command_output

- debug:
    var: command_output.stdout_lines

- name: TWGCB-01-008-0078
  become: true
  shell: |
    awk -F: '($3 == 0) { print $1 }' /etc/passwd 
  args:
    executable: /bin/bash
  ignore_errors: true
  register: command_output

- debug:
    var: command_output.stdout_lines

- name: TWGCB-01-008-0079
  become: true
  shell: |
    #!/bin/bash
    grep -E -v '^(halt|sync|shutdown)' /etc/passwd | awk -F: '($7 != "'"$(which nologin)"'" && $7 != "/bin/false") { print $1 " " $6 }' | while read user dir; do
    if [ ! -d "$dir" ]; then
    echo "The home directory ($dir) of user $user does not exist."
    else
    dirperm=$(ls -ld $dir | cut -f1 -d" ")
    if [ $(echo $dirperm | cut -c6) != "-" ]; then
    echo "Group Write permission set on the home directory ($dir) of user
    $user"
    fi
    if [ $(echo $dirperm | cut -c8) != "-" ]; then
    echo "Other Read permission set on the home directory ($dir) of user
    $user"
    fi
    if [ $(echo $dirperm | cut -c9) != "-" ]; then
    echo "Other Write permission set on the home directory ($dir) of user
    $user"
    fi
    if [ $(echo $dirperm | cut -c10) != "-" ]; then
    echo "Other Execute permission set on the home directory ($dir) of user
    $user"
    fi
    fi
    done
  args:
    executable: /bin/bash
  ignore_errors: true
  register: command_output

- debug:
    var: command_output.stdout_lines

- name: TWGCB-01-008-0081
  become: true
  shell: |
    #!/bin/bash
    grep -E -v '^(halt|sync|shutdown)' /etc/passwd | awk -F: '($7 != "'"$(which nologin)"'" && $7 != "/bin/false") { print $1 " " $4 " " $6 }' | while read user gid dir; do
    if [ ! -d "$dir" ]; then
    echo "The home directory ($dir) of user $user does not exist."
    else
    owner=$(stat -L -c "%g" "$dir")
    if [ "$owner" != "$gid" ]; then
    echo "The home directory ($dir) of group $gid is owned by group $owner."
    fi
    fi
    done
  args:
    executable: /bin/bash
  ignore_errors: true
  register: command_output

- debug:
    var: command_output.stdout_lines

- name: TWGCB-01-008-0082
  become: true
  shell: |
    #!/bin/bash
    grep -E -v '^(halt|sync|shutdown)' /etc/passwd | awk -F: '($7 != "'"$(which nologin)"'" && $7 != "/bin/false") { print $1 " " $6 }' | while read user dir; do
    if [ ! -d "$dir" ]; then
    echo "The home directory ($dir) of user $user does not exist."
    else
    for file in $dir/.[A-Za-z0-9]*; do
    if [ ! -h "$file" -a -f "$file" ]; then
    fileperm=$(ls -ld $file | cut -f1 -d" ")
    if [ $(echo $fileperm | cut -c6) != "-" ]; then
    echo "Group Write permission set on file $file"
    fi
    if [ $(echo $fileperm | cut -c9) != "-" ]; then
    echo "Other Write permission set on file $file"
    fi
    fi
    done
    fi
    done
  args:
    executable: /bin/bash
  ignore_errors: true
  register: command_output

- debug:
    var: command_output.stdout_lines

- name: TWGCB-01-008-0083
  become: true
  shell: |
    #!/bin/bash
    grep -E -v '^(root|halt|sync|shutdown)' /etc/passwd | awk -F: '($7 != "'"$(which nologin)"'" && $7 != "/bin/false") { print $1 " " $6 }' | while read user dir; do
    if [ ! -d "$dir" ]; then
    echo "The home directory ($dir) of user $user does not exist."
    else
    if [ ! -h "$dir/.forward" -a -f "$dir/.forward" ]; then
    echo ".forward file $dir/.forward exists"
    fi
    fi
    done
  args:
    executable: /bin/bash
  ignore_errors: true
  register: command_output

- debug:
    var: command_output.stdout_lines

- name: TWGCB-01-008-0084
  become: true
  shell: |
    #!/bin/bash
    grep -E -v '^(root|halt|sync|shutdown)' /etc/passwd | awk -F: '($7 != "'"$(which nologin)"'" && $7 != "/bin/false") { print $1 " " $6 }' | while read user dir; do
    if [ ! -d "$dir" ]; then
    echo "The home directory ($dir) of user $user does not exist."
    else
    if [ ! -h "$dir/.netrc" -a -f "$dir/.netrc" ]; then
    echo ".netrc file $dir/.netrc exists"
    fi
    fi
    done
  args:
    executable: /bin/bash
  ignore_errors: true
  register: command_output

- debug:
    var: command_output.stdout_lines

- name: TWGCB-01-008-0085
  become: true
  shell: |
    #!/bin/bash
    grep -E -v '^(root|halt|sync|shutdown)' /etc/passwd | awk -F: '($7 != "'"$(which nologin)"'" && $7 != "/bin/false") { print $1 " " $6 }' | while read user dir; do
    if [ ! -d "$dir" ]; then
    echo "The home directory ($dir) of user $user does not exist."
    else
    for file in $dir/.rhosts; do
    if [ ! -h "$file" -a -f "$file" ]; then
    echo ".rhosts file in $dir"
    fi
    done
    fi
    done
  args:
    executable: /bin/bash
  ignore_errors: true
  register: command_output

- debug:
    var: command_output.stdout_lines

- name: TWGCB-01-008-0086
  become: true
  shell: |
    #!/bin/bash
    for i in $(cut -s -d: -f4 /etc/passwd | sort -u ); do
    grep -q -P "^.*?:[^:]*:$i:" /etc/group
    if [ $? -ne 0 ]; then
    echo "Group $i is referenced by /etc/passwd but does not exist in /etc/group"
    fi
    done
  args:
    executable: /bin/bash
  ignore_errors: true
  register: command_output

- debug:
    var: command_output.stdout_lines

- name: TWGCB-01-008-0087
  become: true
  shell: |
    #!/bin/bash
    cut -f3 -d":" /etc/passwd | sort -n | uniq -c | while read x ; do
    [ -z "$x" ] && break
    set - $x
    if [ $1 -gt 1 ]; then
    users=$(awk -F: '($3 == n) { print $1 }' n=$2 /etc/passwd | xargs)
    echo "Duplicate UID ($2): $users"
    fi
    done
  args:
    executable: /bin/bash
  ignore_errors: true
  register: command_output

- debug:
    var: command_output.stdout_lines

- name: TWGCB-01-008-0088
  become: true
  shell: |
    #!/bin/bash
    cut -d: -f3 /etc/group | sort | uniq -d | while read x ; do
    echo "Duplicate GID ($x) in /etc/group"
    done
  args:
    executable: /bin/bash
  ignore_errors: true
  register: command_output

- debug:
    var: command_output.stdout_lines

- name: TWGCB-01-008-0089
  become: true
  shell: |
    #!/bin/bash
    cut -d: -f1 /etc/passwd | sort | uniq -d | while read x
    do echo "Duplicate login name ${x} in /etc/passwd"
    done
  args:
    executable: /bin/bash
  ignore_errors: true
  register: command_output

- debug:
    var: command_output.stdout_lines

- name: TWGCB-01-008-0090
  become: true
  shell: |
    #!/bin/bash
    cut -d: -f1 /etc/group | sort | uniq -d | while read x
    do echo "Duplicate group name ${x} in /etc/group"
    done
  args:
    executable: /bin/bash
  ignore_errors: true
  register: command_output

- debug:
    var: command_output.stdout_lines

- name: TWGCB-01-008-0091
  become: true
  shell: |
    #!/bin/bash
    awk -F: '($1=="shadow") {print $NF}' /etc/group
  args:
    executable: /bin/bash
  ignore_errors: true
  register: command_output

- debug:
    var: command_output.stdout_lines

- name: TWGCB-01-008-0131
  become: true
  shell: |
    #!/bin/bash
    ip link | grep -i promisc
  args:
    executable: /bin/bash
  ignore_errors: true
  register: command_output

- debug:
    var: command_output.stdout_lines

- name: TWGCB-01-008-0143,TWGCB-01-008-0144
  become: true
  shell: |
    #!/bin/bash
    stat -c "%a %n" /sbin/auditctl /sbin/aureport /sbin/ausearch /sbin/autrace /sbin/auditd /sbin/audisp-remote /sbin/audisp-syslog /sbin/augenrules
  args:
    executable: /bin/bash
  ignore_errors: true
  register: command_output

- debug:
    var: command_output.stdout_lines

- name: TWGCB-01-008-0189
  become: true
  shell: |
    #!/bin/bash
    ps -eZf | grep unconfined_service_t
  args:
    executable: /bin/bash
  ignore_errors: true
  register: command_output

- debug:
    var: command_output.stdout_lines

- name: TWGCB-01-008-0231
  become: true
  shell: |
    #!/bin/bash
    egrep -i '(nopasswd|!authenticate)' /etc/sudoers /etc/sudoers.d/*
  args:
    executable: /bin/bash
  ignore_errors: true
  register: command_output

- debug:
    var: command_output.stdout_lines



